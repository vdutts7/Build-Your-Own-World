All questions are optional, though try to answer at least 4. The main goal of this file is to get you thinking critically about your own work, but we will also use these self reflections at the end of the semester when we do our internal review of the course.

ArrayDeque:

Q: Give an example of at least one idea from the staff solution that would have made your solution better (if any).

A: I didn't make use of a public static final int class variable for the startingSize of the array, instead hard-coding "8" in the code. I made this change halfway through when I realized it made for less arbitrary code visually for someone unfamiliar with the proj1a requirements.

Q: What's something you felt proud of in your code, if anything?

A: Using private helper methods! They really helped me organize my logic and streamline my thoughts. Three in particular were helpful from a coding perspective.
- private int indexAfter(int index) which calculates and returns index after an index
- private int indexBefore(int index) which calculates and returns index before an index
- private void changeSize(int adjustedSize) which changes size of array based on new size, passed in as paramater

Q: What's something that was particularly inelegant in your code, if anything?

A:

Q: What did you learn by talking to your partner about writing ArrayDeque?

A: 

Q: What do you wish you would have known before writing ArrayDeque, if anything?

A: Writing private helper methods, but I didn't make this mistake- just know that it would have been way harder without!

Q: If you wrote ArrayDeque again, what would you do differently, if anything?

A: 

-----

LinkedListDeque:

Q: Give an example of at least one idea from the staff solution that would have made your solution better (if any).

A: 

Q: What's something you felt proud of in your code, if anything?

A:

Q: What's something that was particularly inelegant in your code, if anything?

A:

Q: What did you learn by talking to your partner about writing LinkedListDeque?

A: My partner generally followed a trend of avoiding repetitve code in his class, while I often had the same lines that could have been repurposed or grouped together. One example was inefficiently using if/else loops to check for extra cases when not necessary.

Q: What do you wish you would have known before writing LinkedListDeque, if anything?

A:

Q: If you wrote LinkedListDeque again, what would you do differently, if anything?

A:

-----

Meta:

Q: Did you like this design review process? Anything we should do differently next time?

A: It was helpful. Tough to say if it wasn't useful or placebo, but only time will tell, so definitely worth doing again. The communication and coordination was pretty good so not much to change honestly, worked for me!